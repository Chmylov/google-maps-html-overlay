'use strict';

// Constructor
function HtmlOverlay(options) {
  this.position = options.position;
  this.html = options.html;
  this.align = options.align;
  this.setMap(options.map);
}

HtmlOverlay.prototype = new google.maps.OverlayView();

HtmlOverlay.prototype.onAdd = function () {
  // Create the div element.
  this.div = document.createElement('div');
  this.div.style.position = 'absolute';
  this.div.innerHTML = this.html;

  // Add the element to the "overlayMouseTarget" pane.
  this.getPanes().overlayMouseTarget.appendChild(this.div);

  // Add listener to the element.
  var me = this;
  google.maps.event.addDomListener(this.div, 'click', function () {
    google.maps.event.trigger(me, 'click');
  });
};

HtmlOverlay.prototype.draw = function () {
  var positionCorrectionAfterMapDrag = this.getProjection().fromLatLngToDivPixel(new google.maps.LatLng(this.position));

  switch (this.align) {
    case 'center center':
      var positionRelativeToDivTop = this.div.offsetHeight / 2;
      var positionRelativeToDivLeft = this.div.offsetWidth / 2;
      break;
    case 'left center':
      var positionRelativeToDivTop = this.div.offsetHeight / 2;
      var positionRelativeToDivLeft = this.div.offsetWidth;
      break;
    case 'right center':
      var positionRelativeToDivTop = this.div.offsetHeight / 2;
      var positionRelativeToDivLeft = 0;
      break;
    case 'center top':
      var positionRelativeToDivTop = this.div.offsetHeight;
      var positionRelativeToDivLeft = this.div.offsetWidth / 2;
      break;
    case 'center bottom':
      var positionRelativeToDivTop = 0;
      var positionRelativeToDivLeft = this.div.offsetWidth / 2;
      break;
  }

  // Set position
  this.div.style.top = positionCorrectionAfterMapDrag.y - positionRelativeToDivTop + 'px';
  this.div.style.left = positionCorrectionAfterMapDrag.x - positionRelativeToDivLeft + 'px';
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZU1hcHNDdXN0b21IdG1sT3ZlcmxheS5qcyJdLCJuYW1lcyI6WyJIdG1sT3ZlcmxheSIsIm9wdGlvbnMiLCJwb3NpdGlvbiIsImh0bWwiLCJhbGlnbiIsInNldE1hcCIsIm1hcCIsInByb3RvdHlwZSIsImdvb2dsZSIsIm1hcHMiLCJPdmVybGF5VmlldyIsIm9uQWRkIiwiZGl2IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJpbm5lckhUTUwiLCJnZXRQYW5lcyIsIm92ZXJsYXlNb3VzZVRhcmdldCIsImFwcGVuZENoaWxkIiwibWUiLCJldmVudCIsImFkZERvbUxpc3RlbmVyIiwidHJpZ2dlciIsImRyYXciLCJwb3NpdGlvbkNvcnJlY3Rpb25BZnRlck1hcERyYWciLCJnZXRQcm9qZWN0aW9uIiwiZnJvbUxhdExuZ1RvRGl2UGl4ZWwiLCJMYXRMbmciLCJwb3NpdGlvblJlbGF0aXZlVG9EaXZUb3AiLCJvZmZzZXRIZWlnaHQiLCJwb3NpdGlvblJlbGF0aXZlVG9EaXZMZWZ0Iiwib2Zmc2V0V2lkdGgiLCJ0b3AiLCJ5IiwibGVmdCIsIngiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQSxTQUFTQSxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUM1QixPQUFLQyxRQUFMLEdBQWdCRCxRQUFRQyxRQUF4QjtBQUNBLE9BQUtDLElBQUwsR0FBWUYsUUFBUUUsSUFBcEI7QUFDQSxPQUFLQyxLQUFMLEdBQWFILFFBQVFHLEtBQXJCO0FBQ0EsT0FBS0MsTUFBTCxDQUFZSixRQUFRSyxHQUFwQjtBQUNEOztBQUVETixZQUFZTyxTQUFaLEdBQXdCLElBQUlDLE9BQU9DLElBQVAsQ0FBWUMsV0FBaEIsRUFBeEI7O0FBRUFWLFlBQVlPLFNBQVosQ0FBc0JJLEtBQXRCLEdBQThCLFlBQVc7QUFDdkM7QUFDQSxPQUFLQyxHQUFMLEdBQVdDLFNBQVNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBWDtBQUNBLE9BQUtGLEdBQUwsQ0FBU0csS0FBVCxDQUFlYixRQUFmLEdBQTBCLFVBQTFCO0FBQ0EsT0FBS1UsR0FBTCxDQUFTSSxTQUFULEdBQXFCLEtBQUtiLElBQTFCOztBQUVBO0FBQ0EsT0FBS2MsUUFBTCxHQUFnQkMsa0JBQWhCLENBQW1DQyxXQUFuQyxDQUErQyxLQUFLUCxHQUFwRDs7QUFFQTtBQUNBLE1BQUlRLEtBQUssSUFBVDtBQUNBWixTQUFPQyxJQUFQLENBQVlZLEtBQVosQ0FBa0JDLGNBQWxCLENBQWlDLEtBQUtWLEdBQXRDLEVBQTJDLE9BQTNDLEVBQW9ELFlBQVc7QUFDN0RKLFdBQU9DLElBQVAsQ0FBWVksS0FBWixDQUFrQkUsT0FBbEIsQ0FBMEJILEVBQTFCLEVBQThCLE9BQTlCO0FBQ0QsR0FGRDtBQUdELENBZEQ7O0FBZ0JBcEIsWUFBWU8sU0FBWixDQUFzQmlCLElBQXRCLEdBQTZCLFlBQVc7QUFDdEMsTUFBSUMsaUNBQWlDLEtBQUtDLGFBQUwsR0FBcUJDLG9CQUFyQixDQUNuQyxJQUFJbkIsT0FBT0MsSUFBUCxDQUFZbUIsTUFBaEIsQ0FBdUIsS0FBSzFCLFFBQTVCLENBRG1DLENBQXJDOztBQUlBLFVBQVEsS0FBS0UsS0FBYjtBQUNFLFNBQUssZUFBTDtBQUNFLFVBQUl5QiwyQkFBMkIsS0FBS2pCLEdBQUwsQ0FBU2tCLFlBQVQsR0FBd0IsQ0FBdkQ7QUFDQSxVQUFJQyw0QkFBNEIsS0FBS25CLEdBQUwsQ0FBU29CLFdBQVQsR0FBdUIsQ0FBdkQ7QUFDQTtBQUNGLFNBQUssYUFBTDtBQUNFLFVBQUlILDJCQUEyQixLQUFLakIsR0FBTCxDQUFTa0IsWUFBVCxHQUF3QixDQUF2RDtBQUNBLFVBQUlDLDRCQUE0QixLQUFLbkIsR0FBTCxDQUFTb0IsV0FBekM7QUFDQTtBQUNGLFNBQUssY0FBTDtBQUNFLFVBQUlILDJCQUEyQixLQUFLakIsR0FBTCxDQUFTa0IsWUFBVCxHQUF3QixDQUF2RDtBQUNBLFVBQUlDLDRCQUE0QixDQUFoQztBQUNBO0FBQ0YsU0FBSyxZQUFMO0FBQ0UsVUFBSUYsMkJBQTJCLEtBQUtqQixHQUFMLENBQVNrQixZQUF4QztBQUNBLFVBQUlDLDRCQUE0QixLQUFLbkIsR0FBTCxDQUFTb0IsV0FBVCxHQUF1QixDQUF2RDtBQUNBO0FBQ0YsU0FBSyxlQUFMO0FBQ0UsVUFBSUgsMkJBQTJCLENBQS9CO0FBQ0EsVUFBSUUsNEJBQTRCLEtBQUtuQixHQUFMLENBQVNvQixXQUFULEdBQXVCLENBQXZEO0FBQ0E7QUFwQko7O0FBdUJBO0FBQ0EsT0FBS3BCLEdBQUwsQ0FBU0csS0FBVCxDQUFla0IsR0FBZixHQUNFUiwrQkFBK0JTLENBQS9CLEdBQW1DTCx3QkFBbkMsR0FBOEQsSUFEaEU7QUFFQSxPQUFLakIsR0FBTCxDQUFTRyxLQUFULENBQWVvQixJQUFmLEdBQ0VWLCtCQUErQlcsQ0FBL0IsR0FBbUNMLHlCQUFuQyxHQUErRCxJQURqRTtBQUVELENBakNEIiwiZmlsZSI6Imdvb2dsZU1hcHNDdXN0b21IdG1sT3ZlcmxheS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25zdHJ1Y3RvclxyXG5mdW5jdGlvbiBIdG1sT3ZlcmxheShvcHRpb25zKSB7XHJcbiAgdGhpcy5wb3NpdGlvbiA9IG9wdGlvbnMucG9zaXRpb247XHJcbiAgdGhpcy5odG1sID0gb3B0aW9ucy5odG1sO1xyXG4gIHRoaXMuYWxpZ24gPSBvcHRpb25zLmFsaWduO1xyXG4gIHRoaXMuc2V0TWFwKG9wdGlvbnMubWFwKTtcclxufVxyXG5cclxuSHRtbE92ZXJsYXkucHJvdG90eXBlID0gbmV3IGdvb2dsZS5tYXBzLk92ZXJsYXlWaWV3KCk7XHJcblxyXG5IdG1sT3ZlcmxheS5wcm90b3R5cGUub25BZGQgPSBmdW5jdGlvbigpIHtcclxuICAvLyBDcmVhdGUgdGhlIGRpdiBlbGVtZW50LlxyXG4gIHRoaXMuZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgdGhpcy5kaXYuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG4gIHRoaXMuZGl2LmlubmVySFRNTCA9IHRoaXMuaHRtbDtcclxuXHJcbiAgLy8gQWRkIHRoZSBlbGVtZW50IHRvIHRoZSBcIm92ZXJsYXlNb3VzZVRhcmdldFwiIHBhbmUuXHJcbiAgdGhpcy5nZXRQYW5lcygpLm92ZXJsYXlNb3VzZVRhcmdldC5hcHBlbmRDaGlsZCh0aGlzLmRpdik7XHJcblxyXG4gIC8vIEFkZCBsaXN0ZW5lciB0byB0aGUgZWxlbWVudC5cclxuICB2YXIgbWUgPSB0aGlzO1xyXG4gIGdvb2dsZS5tYXBzLmV2ZW50LmFkZERvbUxpc3RlbmVyKHRoaXMuZGl2LCAnY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgIGdvb2dsZS5tYXBzLmV2ZW50LnRyaWdnZXIobWUsICdjbGljaycpO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuSHRtbE92ZXJsYXkucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbigpIHtcclxuICB2YXIgcG9zaXRpb25Db3JyZWN0aW9uQWZ0ZXJNYXBEcmFnID0gdGhpcy5nZXRQcm9qZWN0aW9uKCkuZnJvbUxhdExuZ1RvRGl2UGl4ZWwoXHJcbiAgICBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKHRoaXMucG9zaXRpb24pXHJcbiAgKTtcclxuXHJcbiAgc3dpdGNoICh0aGlzLmFsaWduKSB7XHJcbiAgICBjYXNlICdjZW50ZXIgY2VudGVyJzpcclxuICAgICAgdmFyIHBvc2l0aW9uUmVsYXRpdmVUb0RpdlRvcCA9IHRoaXMuZGl2Lm9mZnNldEhlaWdodCAvIDI7XHJcbiAgICAgIHZhciBwb3NpdGlvblJlbGF0aXZlVG9EaXZMZWZ0ID0gdGhpcy5kaXYub2Zmc2V0V2lkdGggLyAyO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ2xlZnQgY2VudGVyJzpcclxuICAgICAgdmFyIHBvc2l0aW9uUmVsYXRpdmVUb0RpdlRvcCA9IHRoaXMuZGl2Lm9mZnNldEhlaWdodCAvIDI7XHJcbiAgICAgIHZhciBwb3NpdGlvblJlbGF0aXZlVG9EaXZMZWZ0ID0gdGhpcy5kaXYub2Zmc2V0V2lkdGg7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAncmlnaHQgY2VudGVyJzpcclxuICAgICAgdmFyIHBvc2l0aW9uUmVsYXRpdmVUb0RpdlRvcCA9IHRoaXMuZGl2Lm9mZnNldEhlaWdodCAvIDI7XHJcbiAgICAgIHZhciBwb3NpdGlvblJlbGF0aXZlVG9EaXZMZWZ0ID0gMDtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdjZW50ZXIgdG9wJzpcclxuICAgICAgdmFyIHBvc2l0aW9uUmVsYXRpdmVUb0RpdlRvcCA9IHRoaXMuZGl2Lm9mZnNldEhlaWdodDtcclxuICAgICAgdmFyIHBvc2l0aW9uUmVsYXRpdmVUb0RpdkxlZnQgPSB0aGlzLmRpdi5vZmZzZXRXaWR0aCAvIDI7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnY2VudGVyIGJvdHRvbSc6XHJcbiAgICAgIHZhciBwb3NpdGlvblJlbGF0aXZlVG9EaXZUb3AgPSAwO1xyXG4gICAgICB2YXIgcG9zaXRpb25SZWxhdGl2ZVRvRGl2TGVmdCA9IHRoaXMuZGl2Lm9mZnNldFdpZHRoIC8gMjtcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG5cclxuICAvLyBTZXQgcG9zaXRpb25cclxuICB0aGlzLmRpdi5zdHlsZS50b3AgPVxyXG4gICAgcG9zaXRpb25Db3JyZWN0aW9uQWZ0ZXJNYXBEcmFnLnkgLSBwb3NpdGlvblJlbGF0aXZlVG9EaXZUb3AgKyAncHgnO1xyXG4gIHRoaXMuZGl2LnN0eWxlLmxlZnQgPVxyXG4gICAgcG9zaXRpb25Db3JyZWN0aW9uQWZ0ZXJNYXBEcmFnLnggLSBwb3NpdGlvblJlbGF0aXZlVG9EaXZMZWZ0ICsgJ3B4JztcclxufTtcclxuIl19
